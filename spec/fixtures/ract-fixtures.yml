ract:
  fixtures:
    foo.ract.js:
      label: render() should return the executed js-code
      source: "return '<tag>{{value}}</tag>'"
      invalidate: true

    foo.ract.css:
      label: render() should throws an error (cannot compile css-to-ract)
      source: "body { color: #000 }"
      throws: true

    foo.ract.html:
      label: render() should return html-code as is
      source: <markup>
      sameinput: true

    foo.ract.jade:
      label: render() should return the evaluated jade-code
      source: "foo: bar"
      contain: </bar>

    foo.ract.less:
      label: render() should throws an error (cannot compile less-to-ract)
      source: "a { &:hover { color: red } }"
      throws: true

    foo.ract.coffee:
      label: render() should throws an error (cannot compile coffee-to-ract)
      source: "-> 'string'"
      throws: true

    foo.ract.md:
      label: render() should return the generated html-code
      source: "> markdown"
      contain: </blockquote>

    foo.ract.json:
      label: render() should throws an error (cannot compile json-to-ract)
      source: "{ foo: 'bar' }"
      throws: true
